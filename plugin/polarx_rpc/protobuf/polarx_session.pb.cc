// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: polarx_session.proto

#include "polarx_session.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PolarXRPC {
namespace Session {
constexpr AuthenticateStart::AuthenticateStart(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mech_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , auth_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , initial_response_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AuthenticateStartDefaultTypeInternal {
  constexpr AuthenticateStartDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticateStartDefaultTypeInternal() {}
  union {
    AuthenticateStart _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticateStartDefaultTypeInternal _AuthenticateStart_default_instance_;
constexpr AuthenticateContinue::AuthenticateContinue(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auth_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AuthenticateContinueDefaultTypeInternal {
  constexpr AuthenticateContinueDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticateContinueDefaultTypeInternal() {}
  union {
    AuthenticateContinue _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticateContinueDefaultTypeInternal _AuthenticateContinue_default_instance_;
constexpr AuthenticateOk::AuthenticateOk(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : auth_data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AuthenticateOkDefaultTypeInternal {
  constexpr AuthenticateOkDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AuthenticateOkDefaultTypeInternal() {}
  union {
    AuthenticateOk _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AuthenticateOkDefaultTypeInternal _AuthenticateOk_default_instance_;
constexpr NewSession::NewSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct NewSessionDefaultTypeInternal {
  constexpr NewSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~NewSessionDefaultTypeInternal() {}
  union {
    NewSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT NewSessionDefaultTypeInternal _NewSession_default_instance_;
constexpr KillSession::KillSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_session_id_(uint64_t{0u})
  , type_(1)
{}
struct KillSessionDefaultTypeInternal {
  constexpr KillSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KillSessionDefaultTypeInternal() {}
  union {
    KillSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KillSessionDefaultTypeInternal _KillSession_default_instance_;
constexpr Reset::Reset(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct ResetDefaultTypeInternal {
  constexpr ResetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResetDefaultTypeInternal() {}
  union {
    Reset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResetDefaultTypeInternal _Reset_default_instance_;
constexpr Close::Close(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CloseDefaultTypeInternal {
  constexpr CloseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CloseDefaultTypeInternal() {}
  union {
    Close _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CloseDefaultTypeInternal _Close_default_instance_;
}  // namespace Session
}  // namespace PolarXRPC
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_polarx_5fsession_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_polarx_5fsession_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_polarx_5fsession_2eproto = nullptr;

const uint32_t TableStruct_polarx_5fsession_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateStart, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateStart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateStart, mech_name_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateStart, auth_data_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateStart, initial_response_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateContinue, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateContinue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateContinue, auth_data_),
  0,
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateOk, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateOk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::AuthenticateOk, auth_data_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::NewSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::KillSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::KillSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::KillSession, type_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::KillSession, x_session_id_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::Reset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Session::Close, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, -1, sizeof(::PolarXRPC::Session::AuthenticateStart)},
  { 12, 19, -1, sizeof(::PolarXRPC::Session::AuthenticateContinue)},
  { 20, 27, -1, sizeof(::PolarXRPC::Session::AuthenticateOk)},
  { 28, -1, -1, sizeof(::PolarXRPC::Session::NewSession)},
  { 34, 42, -1, sizeof(::PolarXRPC::Session::KillSession)},
  { 44, -1, -1, sizeof(::PolarXRPC::Session::Reset)},
  { 50, -1, -1, sizeof(::PolarXRPC::Session::Close)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_AuthenticateStart_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_AuthenticateContinue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_AuthenticateOk_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_NewSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_KillSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_Reset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Session::_Close_default_instance_),
};

const char descriptor_table_protodef_polarx_5fsession_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024polarx_session.proto\022\021PolarXRPC.Sessio"
  "n\"S\n\021AuthenticateStart\022\021\n\tmech_name\030\001 \002("
  "\t\022\021\n\tauth_data\030\002 \001(\014\022\030\n\020initial_response"
  "\030\003 \001(\014\")\n\024AuthenticateContinue\022\021\n\tauth_d"
  "ata\030\001 \002(\014\"#\n\016AuthenticateOk\022\021\n\tauth_data"
  "\030\001 \001(\014\"\014\n\nNewSession\"\201\001\n\013KillSession\0225\n\004"
  "type\030\001 \002(\0162\'.PolarXRPC.Session.KillSessi"
  "on.KillType\022\024\n\014x_session_id\030\002 \002(\004\"%\n\010Kil"
  "lType\022\t\n\005QUERY\020\001\022\016\n\nCONNECTION\020\002\"\007\n\005Rese"
  "t\"\007\n\005CloseB\036\n\034com.mysql.cj.polarx.protob"
  "uf"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_polarx_5fsession_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_polarx_5fsession_2eproto = {
  false, false, 402, descriptor_table_protodef_polarx_5fsession_2eproto, "polarx_session.proto", 
  &descriptor_table_polarx_5fsession_2eproto_once, nullptr, 0, 7,
  schemas, file_default_instances, TableStruct_polarx_5fsession_2eproto::offsets,
  file_level_metadata_polarx_5fsession_2eproto, file_level_enum_descriptors_polarx_5fsession_2eproto, file_level_service_descriptors_polarx_5fsession_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_polarx_5fsession_2eproto_getter() {
  return &descriptor_table_polarx_5fsession_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_polarx_5fsession_2eproto(&descriptor_table_polarx_5fsession_2eproto);
namespace PolarXRPC {
namespace Session {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* KillSession_KillType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_polarx_5fsession_2eproto);
  return file_level_enum_descriptors_polarx_5fsession_2eproto[0];
}
bool KillSession_KillType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr KillSession_KillType KillSession::QUERY;
constexpr KillSession_KillType KillSession::CONNECTION;
constexpr KillSession_KillType KillSession::KillType_MIN;
constexpr KillSession_KillType KillSession::KillType_MAX;
constexpr int KillSession::KillType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class AuthenticateStart::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthenticateStart>()._has_bits_);
  static void set_has_mech_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_auth_data(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_initial_response(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AuthenticateStart::AuthenticateStart(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.AuthenticateStart)
}
AuthenticateStart::AuthenticateStart(const AuthenticateStart& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mech_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    mech_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_mech_name()) {
    mech_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mech_name(), 
      GetArenaForAllocation());
  }
  auth_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    auth_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_auth_data()) {
    auth_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_auth_data(), 
      GetArenaForAllocation());
  }
  initial_response_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    initial_response_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_initial_response()) {
    initial_response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_initial_response(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.AuthenticateStart)
}

inline void AuthenticateStart::SharedCtor() {
mech_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  mech_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
auth_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  auth_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
initial_response_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  initial_response_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateStart::~AuthenticateStart() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Session.AuthenticateStart)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthenticateStart::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  mech_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  auth_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  initial_response_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateStart::ArenaDtor(void* object) {
  AuthenticateStart* _this = reinterpret_cast< AuthenticateStart* >(object);
  (void)_this;
}
void AuthenticateStart::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateStart::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticateStart::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Session.AuthenticateStart)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      mech_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      auth_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      initial_response_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateStart::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required string mech_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_mech_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PolarXRPC.Session.AuthenticateStart.mech_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes auth_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_auth_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes initial_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_initial_response();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateStart::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Session.AuthenticateStart)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string mech_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_mech_name().data(), static_cast<int>(this->_internal_mech_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PolarXRPC.Session.AuthenticateStart.mech_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_mech_name(), target);
  }

  // optional bytes auth_data = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_auth_data(), target);
  }

  // optional bytes initial_response = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_initial_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Session.AuthenticateStart)
  return target;
}

size_t AuthenticateStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Session.AuthenticateStart)
  size_t total_size = 0;

  // required string mech_name = 1;
  if (_internal_has_mech_name()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mech_name());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional bytes auth_data = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_auth_data());
    }

    // optional bytes initial_response = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_initial_response());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateStart::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticateStart::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateStart::GetClassData() const { return &_class_data_; }

void AuthenticateStart::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticateStart *>(to)->MergeFrom(
      static_cast<const AuthenticateStart &>(from));
}


void AuthenticateStart::MergeFrom(const AuthenticateStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Session.AuthenticateStart)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_mech_name(from._internal_mech_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_auth_data(from._internal_auth_data());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_initial_response(from._internal_initial_response());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateStart::CopyFrom(const AuthenticateStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Session.AuthenticateStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateStart::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void AuthenticateStart::InternalSwap(AuthenticateStart* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mech_name_, lhs_arena,
      &other->mech_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &auth_data_, lhs_arena,
      &other->auth_data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &initial_response_, lhs_arena,
      &other->initial_response_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateStart::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[0]);
}

// ===================================================================

class AuthenticateContinue::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthenticateContinue>()._has_bits_);
  static void set_has_auth_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

AuthenticateContinue::AuthenticateContinue(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.AuthenticateContinue)
}
AuthenticateContinue::AuthenticateContinue(const AuthenticateContinue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auth_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    auth_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_auth_data()) {
    auth_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_auth_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.AuthenticateContinue)
}

inline void AuthenticateContinue::SharedCtor() {
auth_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  auth_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateContinue::~AuthenticateContinue() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Session.AuthenticateContinue)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthenticateContinue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  auth_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateContinue::ArenaDtor(void* object) {
  AuthenticateContinue* _this = reinterpret_cast< AuthenticateContinue* >(object);
  (void)_this;
}
void AuthenticateContinue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateContinue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticateContinue::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Session.AuthenticateContinue)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auth_data_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateContinue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required bytes auth_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_auth_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateContinue::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Session.AuthenticateContinue)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bytes auth_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_auth_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Session.AuthenticateContinue)
  return target;
}

size_t AuthenticateContinue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Session.AuthenticateContinue)
  size_t total_size = 0;

  // required bytes auth_data = 1;
  if (_internal_has_auth_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_auth_data());
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateContinue::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticateContinue::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateContinue::GetClassData() const { return &_class_data_; }

void AuthenticateContinue::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticateContinue *>(to)->MergeFrom(
      static_cast<const AuthenticateContinue &>(from));
}


void AuthenticateContinue::MergeFrom(const AuthenticateContinue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Session.AuthenticateContinue)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth_data()) {
    _internal_set_auth_data(from._internal_auth_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateContinue::CopyFrom(const AuthenticateContinue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Session.AuthenticateContinue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateContinue::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void AuthenticateContinue::InternalSwap(AuthenticateContinue* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &auth_data_, lhs_arena,
      &other->auth_data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateContinue::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[1]);
}

// ===================================================================

class AuthenticateOk::_Internal {
 public:
  using HasBits = decltype(std::declval<AuthenticateOk>()._has_bits_);
  static void set_has_auth_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AuthenticateOk::AuthenticateOk(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.AuthenticateOk)
}
AuthenticateOk::AuthenticateOk(const AuthenticateOk& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  auth_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    auth_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_auth_data()) {
    auth_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_auth_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.AuthenticateOk)
}

inline void AuthenticateOk::SharedCtor() {
auth_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  auth_data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AuthenticateOk::~AuthenticateOk() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Session.AuthenticateOk)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AuthenticateOk::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  auth_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AuthenticateOk::ArenaDtor(void* object) {
  AuthenticateOk* _this = reinterpret_cast< AuthenticateOk* >(object);
  (void)_this;
}
void AuthenticateOk::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AuthenticateOk::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AuthenticateOk::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Session.AuthenticateOk)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    auth_data_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AuthenticateOk::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional bytes auth_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_auth_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AuthenticateOk::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Session.AuthenticateOk)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes auth_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_auth_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Session.AuthenticateOk)
  return target;
}

size_t AuthenticateOk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Session.AuthenticateOk)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional bytes auth_data = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_auth_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AuthenticateOk::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AuthenticateOk::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AuthenticateOk::GetClassData() const { return &_class_data_; }

void AuthenticateOk::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AuthenticateOk *>(to)->MergeFrom(
      static_cast<const AuthenticateOk &>(from));
}


void AuthenticateOk::MergeFrom(const AuthenticateOk& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Session.AuthenticateOk)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_auth_data()) {
    _internal_set_auth_data(from._internal_auth_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AuthenticateOk::CopyFrom(const AuthenticateOk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Session.AuthenticateOk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthenticateOk::IsInitialized() const {
  return true;
}

void AuthenticateOk::InternalSwap(AuthenticateOk* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &auth_data_, lhs_arena,
      &other->auth_data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AuthenticateOk::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[2]);
}

// ===================================================================

class NewSession::_Internal {
 public:
};

NewSession::NewSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.NewSession)
}
NewSession::NewSession(const NewSession& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.NewSession)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NewSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NewSession::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata NewSession::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[3]);
}

// ===================================================================

class KillSession::_Internal {
 public:
  using HasBits = decltype(std::declval<KillSession>()._has_bits_);
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_x_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

KillSession::KillSession(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.KillSession)
}
KillSession::KillSession(const KillSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_session_id_, &from.x_session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&x_session_id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.KillSession)
}

inline void KillSession::SharedCtor() {
x_session_id_ = uint64_t{0u};
type_ = 1;
}

KillSession::~KillSession() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Session.KillSession)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void KillSession::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void KillSession::ArenaDtor(void* object) {
  KillSession* _this = reinterpret_cast< KillSession* >(object);
  (void)_this;
}
void KillSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KillSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KillSession::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Session.KillSession)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    x_session_id_ = uint64_t{0u};
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KillSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .PolarXRPC.Session.KillSession.KillType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::PolarXRPC::Session::KillSession_KillType_IsValid(val))) {
            _internal_set_type(static_cast<::PolarXRPC::Session::KillSession_KillType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else
          goto handle_unusual;
        continue;
      // required uint64 x_session_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_x_session_id(&has_bits);
          x_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KillSession::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Session.KillSession)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PolarXRPC.Session.KillSession.KillType type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // required uint64 x_session_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_x_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Session.KillSession)
  return target;
}

size_t KillSession::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PolarXRPC.Session.KillSession)
  size_t total_size = 0;

  if (_internal_has_x_session_id()) {
    // required uint64 x_session_id = 2;
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_x_session_id());
  }

  if (_internal_has_type()) {
    // required .PolarXRPC.Session.KillSession.KillType type = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return total_size;
}
size_t KillSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Session.KillSession)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 x_session_id = 2;
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_x_session_id());

    // required .PolarXRPC.Session.KillSession.KillType type = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KillSession::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KillSession::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KillSession::GetClassData() const { return &_class_data_; }

void KillSession::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KillSession *>(to)->MergeFrom(
      static_cast<const KillSession &>(from));
}


void KillSession::MergeFrom(const KillSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Session.KillSession)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      x_session_id_ = from.x_session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KillSession::CopyFrom(const KillSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Session.KillSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillSession::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void KillSession::InternalSwap(KillSession* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(x_session_id_, other->x_session_id_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata KillSession::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[4]);
}

// ===================================================================

class Reset::_Internal {
 public:
};

Reset::Reset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.Reset)
}
Reset::Reset(const Reset& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.Reset)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Reset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Reset::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Reset::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[5]);
}

// ===================================================================

class Close::_Internal {
 public:
};

Close::Close(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Session.Close)
}
Close::Close(const Close& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Session.Close)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Close::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Close::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Close::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fsession_2eproto_getter, &descriptor_table_polarx_5fsession_2eproto_once,
      file_level_metadata_polarx_5fsession_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Session
}  // namespace PolarXRPC
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::AuthenticateStart* Arena::CreateMaybeMessage< ::PolarXRPC::Session::AuthenticateStart >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::AuthenticateStart >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::AuthenticateContinue* Arena::CreateMaybeMessage< ::PolarXRPC::Session::AuthenticateContinue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::AuthenticateContinue >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::AuthenticateOk* Arena::CreateMaybeMessage< ::PolarXRPC::Session::AuthenticateOk >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::AuthenticateOk >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::NewSession* Arena::CreateMaybeMessage< ::PolarXRPC::Session::NewSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::NewSession >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::KillSession* Arena::CreateMaybeMessage< ::PolarXRPC::Session::KillSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::KillSession >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::Reset* Arena::CreateMaybeMessage< ::PolarXRPC::Session::Reset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::Reset >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Session::Close* Arena::CreateMaybeMessage< ::PolarXRPC::Session::Close >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Session::Close >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
