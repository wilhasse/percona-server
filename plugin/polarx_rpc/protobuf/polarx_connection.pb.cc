// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: polarx_connection.proto

#include "polarx_connection.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace PolarXRPC {
namespace Connection {
constexpr Capability::Capability(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(nullptr){}
struct CapabilityDefaultTypeInternal {
  constexpr CapabilityDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CapabilityDefaultTypeInternal() {}
  union {
    Capability _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CapabilityDefaultTypeInternal _Capability_default_instance_;
constexpr Capabilities::Capabilities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : capabilities_(){}
struct CapabilitiesDefaultTypeInternal {
  constexpr CapabilitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CapabilitiesDefaultTypeInternal() {}
  union {
    Capabilities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CapabilitiesDefaultTypeInternal _Capabilities_default_instance_;
constexpr CapabilitiesGet::CapabilitiesGet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CapabilitiesGetDefaultTypeInternal {
  constexpr CapabilitiesGetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CapabilitiesGetDefaultTypeInternal() {}
  union {
    CapabilitiesGet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CapabilitiesGetDefaultTypeInternal _CapabilitiesGet_default_instance_;
constexpr CapabilitiesSet::CapabilitiesSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : capabilities_(nullptr){}
struct CapabilitiesSetDefaultTypeInternal {
  constexpr CapabilitiesSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CapabilitiesSetDefaultTypeInternal() {}
  union {
    CapabilitiesSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CapabilitiesSetDefaultTypeInternal _CapabilitiesSet_default_instance_;
constexpr Close::Close(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CloseDefaultTypeInternal {
  constexpr CloseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CloseDefaultTypeInternal() {}
  union {
    Close _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CloseDefaultTypeInternal _Close_default_instance_;
}  // namespace Connection
}  // namespace PolarXRPC
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_polarx_5fconnection_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_polarx_5fconnection_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_polarx_5fconnection_2eproto = nullptr;

const uint32_t TableStruct_polarx_5fconnection_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Capability, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Capability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Capability, name_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Capability, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Capabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Capabilities, capabilities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::CapabilitiesGet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::CapabilitiesSet, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::CapabilitiesSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::CapabilitiesSet, capabilities_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PolarXRPC::Connection::Close, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::PolarXRPC::Connection::Capability)},
  { 10, -1, -1, sizeof(::PolarXRPC::Connection::Capabilities)},
  { 17, -1, -1, sizeof(::PolarXRPC::Connection::CapabilitiesGet)},
  { 23, 30, -1, sizeof(::PolarXRPC::Connection::CapabilitiesSet)},
  { 31, -1, -1, sizeof(::PolarXRPC::Connection::Close)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Connection::_Capability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Connection::_Capabilities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Connection::_CapabilitiesGet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Connection::_CapabilitiesSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PolarXRPC::Connection::_Close_default_instance_),
};

const char descriptor_table_protodef_polarx_5fconnection_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027polarx_connection.proto\022\024PolarXRPC.Con"
  "nection\032\026polarx_datatypes.proto\"C\n\nCapab"
  "ility\022\014\n\004name\030\001 \002(\t\022\'\n\005value\030\002 \002(\0132\030.Pol"
  "arXRPC.Datatypes.Any\"F\n\014Capabilities\0226\n\014"
  "capabilities\030\001 \003(\0132 .PolarXRPC.Connectio"
  "n.Capability\"\021\n\017CapabilitiesGet\"K\n\017Capab"
  "ilitiesSet\0228\n\014capabilities\030\001 \002(\0132\".Polar"
  "XRPC.Connection.Capabilities\"\007\n\005CloseB\036\n"
  "\034com.mysql.cj.polarx.protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_polarx_5fconnection_2eproto_deps[1] = {
  &::descriptor_table_polarx_5fdatatypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_polarx_5fconnection_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_polarx_5fconnection_2eproto = {
  false, false, 349, descriptor_table_protodef_polarx_5fconnection_2eproto, "polarx_connection.proto", 
  &descriptor_table_polarx_5fconnection_2eproto_once, descriptor_table_polarx_5fconnection_2eproto_deps, 1, 5,
  schemas, file_default_instances, TableStruct_polarx_5fconnection_2eproto::offsets,
  file_level_metadata_polarx_5fconnection_2eproto, file_level_enum_descriptors_polarx_5fconnection_2eproto, file_level_service_descriptors_polarx_5fconnection_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_polarx_5fconnection_2eproto_getter() {
  return &descriptor_table_polarx_5fconnection_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_polarx_5fconnection_2eproto(&descriptor_table_polarx_5fconnection_2eproto);
namespace PolarXRPC {
namespace Connection {

// ===================================================================

class Capability::_Internal {
 public:
  using HasBits = decltype(std::declval<Capability>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::PolarXRPC::Datatypes::Any& value(const Capability* msg);
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::PolarXRPC::Datatypes::Any&
Capability::_Internal::value(const Capability* msg) {
  return *msg->value_;
}
void Capability::clear_value() {
  if (value_ != nullptr) value_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
Capability::Capability(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Connection.Capability)
}
Capability::Capability(const Capability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_value()) {
    value_ = new ::PolarXRPC::Datatypes::Any(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Connection.Capability)
}

inline void Capability::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_ = nullptr;
}

Capability::~Capability() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Connection.Capability)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Capability::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void Capability::ArenaDtor(void* object) {
  Capability* _this = reinterpret_cast< Capability* >(object);
  (void)_this;
}
void Capability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Capability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Capability::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Connection.Capability)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(value_ != nullptr);
      value_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Capability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PolarXRPC.Connection.Capability.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // required .PolarXRPC.Datatypes.Any value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Capability::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Connection.Capability)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "PolarXRPC.Connection.Capability.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // required .PolarXRPC.Datatypes.Any value = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Connection.Capability)
  return target;
}

size_t Capability::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PolarXRPC.Connection.Capability)
  size_t total_size = 0;

  if (_internal_has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (_internal_has_value()) {
    // required .PolarXRPC.Datatypes.Any value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  return total_size;
}
size_t Capability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Connection.Capability)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());

    // required .PolarXRPC.Datatypes.Any value = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Capability::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Capability::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Capability::GetClassData() const { return &_class_data_; }

void Capability::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Capability *>(to)->MergeFrom(
      static_cast<const Capability &>(from));
}


void Capability::MergeFrom(const Capability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Connection.Capability)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_value()->::PolarXRPC::Datatypes::Any::MergeFrom(from._internal_value());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Capability::CopyFrom(const Capability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Connection.Capability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capability::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_value()) {
    if (!value_->IsInitialized()) return false;
  }
  return true;
}

void Capability::InternalSwap(Capability* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Capability::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fconnection_2eproto_getter, &descriptor_table_polarx_5fconnection_2eproto_once,
      file_level_metadata_polarx_5fconnection_2eproto[0]);
}

// ===================================================================

class Capabilities::_Internal {
 public:
};

Capabilities::Capabilities(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  capabilities_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Connection.Capabilities)
}
Capabilities::Capabilities(const Capabilities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      capabilities_(from.capabilities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Connection.Capabilities)
}

inline void Capabilities::SharedCtor() {
}

Capabilities::~Capabilities() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Connection.Capabilities)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Capabilities::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Capabilities::ArenaDtor(void* object) {
  Capabilities* _this = reinterpret_cast< Capabilities* >(object);
  (void)_this;
}
void Capabilities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Capabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Capabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Connection.Capabilities)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  capabilities_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Capabilities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .PolarXRPC.Connection.Capability capabilities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_capabilities(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Capabilities::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Connection.Capabilities)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PolarXRPC.Connection.Capability capabilities = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_capabilities_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_capabilities(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Connection.Capabilities)
  return target;
}

size_t Capabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Connection.Capabilities)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PolarXRPC.Connection.Capability capabilities = 1;
  total_size += 1UL * this->_internal_capabilities_size();
  for (const auto& msg : this->capabilities_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Capabilities::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Capabilities::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Capabilities::GetClassData() const { return &_class_data_; }

void Capabilities::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Capabilities *>(to)->MergeFrom(
      static_cast<const Capabilities &>(from));
}


void Capabilities::MergeFrom(const Capabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Connection.Capabilities)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  capabilities_.MergeFrom(from.capabilities_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Capabilities::CopyFrom(const Capabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Connection.Capabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Capabilities::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(capabilities_))
    return false;
  return true;
}

void Capabilities::InternalSwap(Capabilities* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  capabilities_.InternalSwap(&other->capabilities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Capabilities::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fconnection_2eproto_getter, &descriptor_table_polarx_5fconnection_2eproto_once,
      file_level_metadata_polarx_5fconnection_2eproto[1]);
}

// ===================================================================

class CapabilitiesGet::_Internal {
 public:
};

CapabilitiesGet::CapabilitiesGet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Connection.CapabilitiesGet)
}
CapabilitiesGet::CapabilitiesGet(const CapabilitiesGet& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Connection.CapabilitiesGet)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CapabilitiesGet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CapabilitiesGet::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CapabilitiesGet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fconnection_2eproto_getter, &descriptor_table_polarx_5fconnection_2eproto_once,
      file_level_metadata_polarx_5fconnection_2eproto[2]);
}

// ===================================================================

class CapabilitiesSet::_Internal {
 public:
  using HasBits = decltype(std::declval<CapabilitiesSet>()._has_bits_);
  static const ::PolarXRPC::Connection::Capabilities& capabilities(const CapabilitiesSet* msg);
  static void set_has_capabilities(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::PolarXRPC::Connection::Capabilities&
CapabilitiesSet::_Internal::capabilities(const CapabilitiesSet* msg) {
  return *msg->capabilities_;
}
CapabilitiesSet::CapabilitiesSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Connection.CapabilitiesSet)
}
CapabilitiesSet::CapabilitiesSet(const CapabilitiesSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_capabilities()) {
    capabilities_ = new ::PolarXRPC::Connection::Capabilities(*from.capabilities_);
  } else {
    capabilities_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Connection.CapabilitiesSet)
}

inline void CapabilitiesSet::SharedCtor() {
capabilities_ = nullptr;
}

CapabilitiesSet::~CapabilitiesSet() {
  // @@protoc_insertion_point(destructor:PolarXRPC.Connection.CapabilitiesSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CapabilitiesSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete capabilities_;
}

void CapabilitiesSet::ArenaDtor(void* object) {
  CapabilitiesSet* _this = reinterpret_cast< CapabilitiesSet* >(object);
  (void)_this;
}
void CapabilitiesSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CapabilitiesSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CapabilitiesSet::Clear() {
// @@protoc_insertion_point(message_clear_start:PolarXRPC.Connection.CapabilitiesSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(capabilities_ != nullptr);
    capabilities_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CapabilitiesSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // required .PolarXRPC.Connection.Capabilities capabilities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_capabilities(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CapabilitiesSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolarXRPC.Connection.CapabilitiesSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PolarXRPC.Connection.Capabilities capabilities = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::capabilities(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolarXRPC.Connection.CapabilitiesSet)
  return target;
}

size_t CapabilitiesSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PolarXRPC.Connection.CapabilitiesSet)
  size_t total_size = 0;

  // required .PolarXRPC.Connection.Capabilities capabilities = 1;
  if (_internal_has_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CapabilitiesSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CapabilitiesSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CapabilitiesSet::GetClassData() const { return &_class_data_; }

void CapabilitiesSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CapabilitiesSet *>(to)->MergeFrom(
      static_cast<const CapabilitiesSet &>(from));
}


void CapabilitiesSet::MergeFrom(const CapabilitiesSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PolarXRPC.Connection.CapabilitiesSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_capabilities()) {
    _internal_mutable_capabilities()->::PolarXRPC::Connection::Capabilities::MergeFrom(from._internal_capabilities());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CapabilitiesSet::CopyFrom(const CapabilitiesSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PolarXRPC.Connection.CapabilitiesSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesSet::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_capabilities()) {
    if (!capabilities_->IsInitialized()) return false;
  }
  return true;
}

void CapabilitiesSet::InternalSwap(CapabilitiesSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(capabilities_, other->capabilities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CapabilitiesSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fconnection_2eproto_getter, &descriptor_table_polarx_5fconnection_2eproto_once,
      file_level_metadata_polarx_5fconnection_2eproto[3]);
}

// ===================================================================

class Close::_Internal {
 public:
};

Close::Close(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:PolarXRPC.Connection.Close)
}
Close::Close(const Close& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PolarXRPC.Connection.Close)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Close::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Close::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Close::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_polarx_5fconnection_2eproto_getter, &descriptor_table_polarx_5fconnection_2eproto_once,
      file_level_metadata_polarx_5fconnection_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Connection
}  // namespace PolarXRPC
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PolarXRPC::Connection::Capability* Arena::CreateMaybeMessage< ::PolarXRPC::Connection::Capability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Connection::Capability >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Connection::Capabilities* Arena::CreateMaybeMessage< ::PolarXRPC::Connection::Capabilities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Connection::Capabilities >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Connection::CapabilitiesGet* Arena::CreateMaybeMessage< ::PolarXRPC::Connection::CapabilitiesGet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Connection::CapabilitiesGet >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Connection::CapabilitiesSet* Arena::CreateMaybeMessage< ::PolarXRPC::Connection::CapabilitiesSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Connection::CapabilitiesSet >(arena);
}
template<> PROTOBUF_NOINLINE ::PolarXRPC::Connection::Close* Arena::CreateMaybeMessage< ::PolarXRPC::Connection::Close >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PolarXRPC::Connection::Close >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
